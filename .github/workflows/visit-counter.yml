name: Traffic Counter (GitHub-only)

on:
  schedule:
    - cron: "0 6 * * *"   # daily at 06:00 UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get 14d views from GitHub Traffic API
        env:
          REPO: Cosagax/BibleBucket
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          # 1) pull 14-day views
          VIEWS_JSON=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/traffic/views)

          # 2) sum the 'count' field across 14 days
          TOTAL_14D=$(python - <<'PY'
import json, sys
d=json.load(sys.stdin)
print(sum(x.get("count",0) for x in d.get("views",[])))
PY
          <<<"$VIEWS_JSON")

          echo "14-day total = $TOTAL_14D"

          # 3) load existing lifetime
          LIFETIME=0
          if [ -f visits.json ]; then
            LIFETIME=$(python - <<'PY'
import json,sys
try:
  print(json.load(open("visits.json")).get("lifetime",0))
except:
  print(0)
PY
)
          fi

          # 4) persist a daily snapshot so we can compute delta
          mkdir -p stats
          TODAY=$(date -u +%F)
          echo "$TOTAL_14D" > stats/last_14d.txt

          # 5) load yesterday’s 14d number (if any) to compute delta
          YEST=0
          if [ -f stats/prev_14d.txt ]; then
            YEST=$(cat stats/prev_14d.txt || echo 0)
          fi

          # delta = increase in 14d window; don’t let it go negative
          DELTA=$((TOTAL_14D - YEST))
          if [ $DELTA -lt 0 ]; then DELTA=0; fi

          NEW_LIFETIME=$((LIFETIME + DELTA))

          # 6) write visits.json
          python - <<PY
import json,datetime
data={"count_14d": $TOTAL_14D,
      "lifetime": $NEW_LIFETIME,
      "last_updated": datetime.datetime.utcnow().isoformat()+"Z"}
open("visits.json","w").write(json.dumps(data, indent=2))
PY

          # 7) stash current to prev for next run
          cp stats/last_14d.txt stats/prev_14d.txt

      - name: Redraw tiny dot on logo (optional, keep or remove)
        run: |
          pip install pillow >/dev/null
          python - <<'PY'
from PIL import Image, ImageDraw
try:
  img = Image.open("assets/logo_base.png").convert("RGBA")
except:
  raise SystemExit(0)
w,h = img.size
dot = Image.new("RGBA",(14,14),(0,0,0,0))
d = ImageDraw.Draw(dot)
d.ellipse((0,0,13,13), fill=(88,166,255,220))
img.alpha_composite(dot, dest=(w-18, 4))
img.save("assets/logo.png", optimize=True)
print("Updated logo dot")
PY

      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add visits.json stats/prev_14d.txt assets/logo.png || true
          git commit -m "traffic: refresh counts" || echo "no changes"
          git push || true
